Desenvolvimento para Internet das Coisas/
Legislação é ética/
Qualidade de Software/
Arquitetura de Projetos de Sistema/
Desenvolvimento para dispositivos móveis/
#_OPE - Oficina de Projeto de Empresa 2/


#########################################################################
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

# C extensions
*.so

# Distribution / packaging
bin/
build/
develop-eggs/
dist/
eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
.tox/
.coverage
.cache
nosetests.xml
coverage.xml

# Translations
*.mo

# Mr Developer
.mr.developer.cfg
.project
.pydevproject

# Rope
.ropeproject

# Django stuff:
*.log
*.pot

# Sphinx documentation
docs/_build/
— seanrose
 fonte
1
por que devemos ignorar os arquivos * .mo? só por curiosidade. esses arquivos .po do gettext são compilados no servidor separadamente?
— Ekin Ertaç
4
Os arquivos .mo são a versão legível por máquina (binária) dos arquivos .po e, como é sabido, é muito melhor manter os arquivos binários fora de um repositório com versão, quando você pode (e deve, desde que inclua os dois .po e .mo meios também manter dados duplicados no repositório, que o VCS não pode mesmo "abóbora")
— dappiu
5
Por que não .DS_Store?
— MaxCore
Estou muito confuso a respeito de porque eles têm .python-versionem .gitignoreaqui: github.com/github/gitignore/blob/master/Python.gitignore#L82
— aceofbassgreg
16
local_settings.py , para projetos de django.

* ~ para todos os projetos.

— Ofri Raviv
 fonte
Isso faz sentido. Eu gosto deste método de separar a configuração geral do específico / local / privado.
— eWall
Como é que isso funciona? Ou seja, como o Django ou Python sabe quando o ambiente é local e quando é produção?
— 21817 MadPhysicist
13
Abrange a maior parte do material geral -

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/